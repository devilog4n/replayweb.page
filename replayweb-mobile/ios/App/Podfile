require_relative '../../node_modules/@capacitor/ios/scripts/pods_helpers'

platform :ios, '14.0'
use_frameworks!

# workaround to avoid Xcode caching of Pods that requires
# Product -> Clean Build Folder after new Cordova plugins installed
# Requires CocoaPods 1.6 or newer
install! 'cocoapods', :disable_input_output_paths => true

def capacitor_pods
  pod 'Capacitor', :path => '../../node_modules/@capacitor/ios'
  pod 'CapacitorCordova', :path => '../../node_modules/@capacitor/ios'
  pod 'CapacitorCommunityHttp', :path => '../../node_modules/@capacitor-community/http'
  pod 'CapacitorCamera', :path => '../../node_modules/@capacitor/camera'
  pod 'CapacitorFilesystem', :path => '../../node_modules/@capacitor/filesystem'
  pod 'CapacitorSplashScreen', :path => '../../node_modules/@capacitor/splash-screen'
  pod 'CapacitorToast', :path => '../../node_modules/@capacitor/toast'
end

target 'App' do
  capacitor_pods
  # Add your Pods here
  pod 'GCDWebServer', '~> 3.5'
  
  # Apply xcconfig file to ensure consistent module import settings
  project 'App.xcodeproj', 'Debug' => :debug, 'Release' => :release
end

post_install do |installer|
  assertDeploymentTarget(installer)
  
  # Simply use the minimum settings required to make UIKit import work
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['SWIFT_VERSION'] = '5.0'
      # Remove this setting to avoid conflict with CocoaPods-defined value
      config.build_settings.delete('ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES')
    end
  end
end
